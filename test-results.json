{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":8,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":8,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1749068328439,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["API Route: /api/companies","GET /api/companies"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies GET /api/companies should return 401 if user is not authenticated","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return 401 if user is not authenticated"},{"ancestorTitles":["API Route: /api/companies","GET /api/companies"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies GET /api/companies should return a list of companies (default limit, no search)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return a list of companies (default limit, no search)"},{"ancestorTitles":["API Route: /api/companies","GET /api/companies"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies GET /api/companies should return searched companies","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return searched companies"},{"ancestorTitles":["API Route: /api/companies","GET /api/companies"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies GET /api/companies should return 400 for invalid limit parameter","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 for invalid limit parameter"},{"ancestorTitles":["API Route: /api/companies","POST /api/companies"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies POST /api/companies should return 401 if user is not authenticated","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return 401 if user is not authenticated"},{"ancestorTitles":["API Route: /api/companies","POST /api/companies"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies POST /api/companies should create a company successfully","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should create a company successfully"},{"ancestorTitles":["API Route: /api/companies","POST /api/companies"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies POST /api/companies should return 400 for invalid payload (e.g., missing name)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 for invalid payload (e.g., missing name)"},{"ancestorTitles":["API Route: /api/companies","POST /api/companies"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"API Route: /api/companies POST /api/companies should return 409 if company name already exists","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 409 if company name already exists"}],"endTime":1749068329035,"message":"","name":"/app/tests/api/companies/companies.test.ts","startTime":1749068328579,"status":"passed","summary":""}],"wasInterrupted":false}
