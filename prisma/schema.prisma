// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   Profile?
  userSkills UserSkill[]
}

model Profile {
  id        String   @id @default(cuid())
  firstName String?
  lastName  String?
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Skill {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userSkills UserSkill[]
}

model UserSkill {
  id        String   @id @default(cuid())
  level     Int // Or you could use an Enum if you have predefined levels
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  skill  Skill  @relation(fields: [skillId], references: [id], onDelete:Restrict) // Restrict deletion of skill if in use
  skillId String

  @@unique([userId, skillId], name: "user_skill_unique_constraint")
}
